# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# rust-clippy is a tool that runs a bunch of lints to catch common
# mistakes in your Rust code and help improve your Rust code.
# More details at https://github.com/rust-lang/rust-clippy
# and https://rust-lang.github.io/rust-clippy/

name: Check PR

on:
  pull_request:
    types: ["ready_for_review", "auto_merge_enabled"]
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

concurrency: "PR${{ github.event.pull_request && github.event.number }}"

jobs:
  cache-build:
    name: Build and cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        id: rustToolchain
        with:
          components: clippy
      - name: Generate cache key
        id: generateCacheKey
        run: echo "cache-key=PR${{ github.event.number }}-${{ steps.rustToolchain.outputs.cachekey }}-${{ steps.rustToolchain.outputs.name }}-${{ github.workflow_sha }}" >> "$GITHUB_OUTPUT"
      - uses: swatinem/rust-cache@v2
        name: Cache setup
        with:
          shared-key: PR${{ github.event.number }}-${{ steps.rustToolchain.outputs.cachekey }}-${{ steps.rustToolchain.outputs.name }}-${{ github.workflow_sha }}
      - uses: taiki-e/install-action@cargo-binstall
        name: Install cargo-binstall
      - name: Build project and tests
        run: cargo build --bins --tests --locked && cargo check --locked --bins --tests

  rust-clippy-analyze:
    name: Analyze with clippy
    needs:
      - cache-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2
        with:
          shared-key: ${{ needs.cache-build.outputs.cache-key }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: taiki-e/install-action@cargo-binstall
      - name: Install required cargo
        run: cargo binstall -y clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy
          --message-format=json --locked | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  cargo-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs:
      - cache-build
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2
        with:
          shared-key: ${{ needs.cache-build.outputs.cache-key }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run unit tests
        run: cargo test --locked